<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\build\bootloader.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\build\bootloader.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Apr 13 10:58:53 2019
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
bootloader_copy_prepare &rArr; bootloader_upgrade &rArr; upgrade &rArr; flash_erase &rArr; erase_flash &rArr; rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[14]">AHBDMA_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">AHBDMA_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[14]">AHBDMA_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[17]">EXIF_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[f]">GPIO_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[18]">I2C_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[12]">MACHW_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[15]">PSRAM_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[b]">PTA_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[c]">SDIO_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[16]">SDMMC_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[a]">SPIFLASH_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[1a]">SystemInit</a> from system_rda5981.o(i.SystemInit) referenced from startup_rda5981.o(.text)
 <LI><a href="#[10]">TIMER0_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[11]">UART0_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[d]">USBDMA_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[e]">USB_IRQHandler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_rda5981.o(.text) referenced from startup_rda5981.o(RESET)
 <LI><a href="#[1b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_rda5981.o(.text)
 <LI><a href="#[1f]">bootloader_copy_go</a> from bootloader_copy.o(i.bootloader_copy_go) referenced from bootloader.o(.constdata)
 <LI><a href="#[1d]">bootloader_copy_prepare</a> from bootloader_copy.o(i.bootloader_copy_prepare) referenced from bootloader.o(.constdata)
 <LI><a href="#[1e]">bootloader_copy_select</a> from bootloader_copy.o(i.bootloader_copy_select) referenced from bootloader.o(.constdata)
 <LI><a href="#[1c]">fputc</a> from retarget.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[19]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[20]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[49]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[4b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[4c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[4d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>AHBDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHBDMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AHBDMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXIF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>MACHW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PSRAM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SDMMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPIFLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>USBDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rda5981.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_version
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_get_version
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_prepare_boot_addr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_version
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_get_version
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3b]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[21]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[52]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[53]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[54]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_rda5981.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_rda5981.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[55]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[2f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_is_valid
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_is_valid
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_prepare_boot_addr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_halfbyte
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_copy_go
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_main
</UL>

<P><STRONG><a name="[56]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[57]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[58]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2d]"></a>board_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, board.o(i.board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = board_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>bootloader_copy_go</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bootloader_copy.o(i.bootloader_copy_go))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bootloader_copy_go &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bootloader.o(.constdata)
</UL>
<P><STRONG><a name="[1d]"></a>bootloader_copy_prepare</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bootloader_copy.o(i.bootloader_copy_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bootloader_copy_prepare &rArr; bootloader_upgrade &rArr; upgrade &rArr; flash_erase &rArr; erase_flash &rArr; rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_prepare_boot_addr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bootloader.o(.constdata)
</UL>
<P><STRONG><a name="[1e]"></a>bootloader_copy_select</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bootloader_copy.o(i.bootloader_copy_select))
<BR>[Address Reference Count : 1]<UL><LI> bootloader.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>bootloader_main</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bootloader.o(i.bootloader_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bootloader_main &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>check_align</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rda_api.o(i.check_align))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
</UL>

<P><STRONG><a name="[3d]"></a>crc32_halfbyte</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, crc32.o(i.crc32_halfbyte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = crc32_halfbyte &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_is_valid
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_is_valid
</UL>

<P><STRONG><a name="[3e]"></a>erase_flash</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, rda_api.o(i.erase_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = erase_flash &rArr; rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rda5981_spi_erase_partition
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_align
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[34]"></a>flash_erase</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, flash.o(i.flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_erase &rArr; erase_flash &rArr; rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_prepare_boot_addr
</UL>

<P><STRONG><a name="[47]"></a>flash_lock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash.o(i.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>

<P><STRONG><a name="[45]"></a>flash_unlock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash.o(i.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>

<P><STRONG><a name="[35]"></a>flash_write</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, flash.o(i.flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = flash_write &rArr; program_flash &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_prepare_boot_addr
</UL>

<P><STRONG><a name="[1c]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fputc &rArr; uart_console_output &rArr; uart_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_console_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[19]"></a>main</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main &rArr; bootloader_main &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_main
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[41]"></a>program_flash</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rda_api.o(i.program_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = program_flash &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_align
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[40]"></a>rda5981_spi_erase_partition</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, rda_api.o(i.rda5981_spi_erase_partition))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash
</UL>

<P><STRONG><a name="[43]"></a>rda5981_spi_flash_erase_64KB_block</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rda_api.o(i.rda5981_spi_flash_erase_64KB_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rda5981_spi_erase_partition
</UL>

<P><STRONG><a name="[42]"></a>uart_console_output</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, drv_uart.o(i.uart_console_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_console_output &rArr; uart_putc
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[2e]"></a>uart_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drv_uart.o(i.uart_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[44]"></a>uart_putc</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, drv_uart.o(i.uart_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_console_output
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[30]"></a>bootloader_prepare_boot_addr</STRONG> (Thumb, 150 bytes, Stack size 64 bytes, bootloader_copy.o(i.bootloader_prepare_boot_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bootloader_prepare_boot_addr &rArr; flash_erase &rArr; erase_flash &rArr; rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_copy_prepare
</UL>

<P><STRONG><a name="[31]"></a>bootloader_upgrade</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, bootloader_copy.o(i.bootloader_upgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bootloader_upgrade &rArr; upgrade &rArr; flash_erase &rArr; erase_flash &rArr; rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_is_valid
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_get_version
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_is_valid
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_get_version
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_copy_prepare
</UL>

<P><STRONG><a name="[39]"></a>firmware_get_version</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bootloader_copy.o(i.firmware_get_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = firmware_get_version
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
</UL>

<P><STRONG><a name="[37]"></a>firmware_is_valid</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bootloader_copy.o(i.firmware_is_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = firmware_is_valid &rArr; crc32_halfbyte &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_halfbyte
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
</UL>

<P><STRONG><a name="[3c]"></a>upgrade</STRONG> (Thumb, 220 bytes, Stack size 80 bytes, bootloader_copy.o(i.upgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = upgrade &rArr; flash_erase &rArr; erase_flash &rArr; rda5981_spi_erase_partition &rArr; rda5981_spi_flash_erase_64KB_block
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_halfbyte
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
</UL>

<P><STRONG><a name="[3a]"></a>upgrade_get_version</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bootloader_copy.o(i.upgrade_get_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = upgrade_get_version
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
</UL>

<P><STRONG><a name="[38]"></a>upgrade_is_valid</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, bootloader_copy.o(i.upgrade_is_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = upgrade_is_valid &rArr; crc32_halfbyte &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_halfbyte
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_upgrade
</UL>

<P><STRONG><a name="[2a]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[2c]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2b]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
